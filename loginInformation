#!/bin/bash
#Created by Halil Yavuz Ã‡evik (25/07/2018)
# 64 bit Ubuntu output example
# [7] [00613] [:0  ] [user      ] [tty7        ] [:0                  ] [0.0.0.0        ] [2018-07-26T17:34:49,586825+0000]

echo -e "ATTENTION! This script is written for CentOS 6 platforms. Script collects login informations from:\n\n/var/log/wtmp\n/var/run/btmp\n/var/log/utmp\n\nPlease check if these files exist and check your permissions before you go any further.\n\n"
dayNum=$(date +"%d")
dayStr=$(date +"%a")
month=$(date +"%b")
year=$(date +"%Y")

echo -e "Current Date : $dayStr $month &dayNum &year"
echo -e "Choose a period for login informations:\n 1 - Daily\n 2 - Weekly\n 3 - Monthly"
SCRIPT_DIR=$(pwd)
touch $SCRIPT_DIR/tmp.txt
chmod 755 $SCRIPT_DIR/tmp.txt
HOSTNAME=$(uname -a | cut -d " " -f 2)
LOGIN_COUNTER=1
read period
echo
echo "Your Choice: $period"
echo
echo "COLLECTING LOGS. PLEASE WAIT"
echo
#Using case construct to eliminate inputs other than 1,2 or 3
case "$period" in

	1)
		echo "$HOSTNAME Users Currently Active" >> tmp.txt
		echo "===============================================" >> tmp.txt
		#Collecting data from /var/run/utmp for checking if anyone is currently active
		stdbuf -oL utmpdump /var/run/utmp | grep "$year" | grep "$dayStr $month $dayNum" |
		while IFS= read -r line
		do
			IN="$line"
			arrINCLI=(${IN//[/[})
			#Lines have whitespaces so we need to use IFS here
			IFS=']'; arrINCLI=($IN); unset IFS;
			if [ "${arrINCLI[0]}" = "[7" ];
				then
				#Excluding whitespaces and '[' character
				iflocal="$(echo -e "${arrINCLI[5]}" | sed -e 's/[[:space:]]*$//' -e 's/^[[:space:]]*//' -e 's/^\[//')"
				iftty="$(echo -e "${arrINCLI[4]}" | sed -e 's/[[:space:]]*$//' -e 's/^[[:space:]]*//' -e 's/^\[//')"
				#Excluding outputs except physical GUI logins
					if [ "$iflocal" = ":0" ] && [[ $iftty =~ [tty.] ]]
						then 
						echo "GUI Active" >> tmp.txt
						echo "${arrINCLI[3]}] ${arrINCLI[7]}]" >> tmp.txt
						echo "-----------------------------------------------" >> tmp.txt
					fi
			fi
		done
		
		echo >> tmp.txt
		echo >> tmp.txt
		
		echo "$HOSTNAME Users Logged in Using GUI" >> tmp.txt
		echo "===============================================" >> tmp.txt
		stdbuf -oL utmpdump /var/log/wtmp | grep "$year" | grep "$dayStr $month $dayNum" |
			while IFS= read -r line
			do
				IN="$line"
				arrIN=(${IN//[/[})
				#Lines have whitespaces so we need to use IFS here
				IFS=']'; arrIN=($IN); unset IFS;
				#Collecting output of ut_type (Normal Processes)
				if [ "${arrIN[0]}" = "[7" ];
					then
					#Excluding whitespaces and '[' character
					iflocal="$(echo -e "${arrIN[5]}" | sed -e 's/[[:space:]]*$//' -e 's/^[[:space:]]*//' -e 's/^\[//')"
					iftty="$(echo -e "${arrIN[4]}" | sed -e 's/[[:space:]]*$//' -e 's/^[[:space:]]*//' -e 's/^\[//')"
					#Excluding outputs except physical GUI logins
					if [ "$iflocal" = ":0" ] && [[ $iftty =~ [tty.] ]]
						then 
						echo "GUI Login $LOGIN_COUNTER" >> tmp.txt
						echo "${arrIN[3]}] ${arrIN[7]}]" >> tmp.txt
						echo "-----------------------------------------------" >> tmp.txt
						LOGIN_COUNTER=$(($LOGIN_COUNTER +1))
					fi
				fi
			done
					
  ;;
  
  2)
  
  ;;
  
  3)
  
  ;;
  
  *)
    esco "Please enter a number from list"
esac

vi tmp.txt
rm $SCRIPT_DIR/tmp.txt
